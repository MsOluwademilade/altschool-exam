---
- name: Deploy Laravel
  hosts: all
  become: yes
  become_method: sudo
  tasks:
  - name: Upgrade System
    apt: upgrade=dist update_cache=yes

  - name: Add php repository
    apt_repository:
     repo: 'ppa:ondrej/php' 

  - name: Install PHP
    become: true
    tags:
      - php
      - debian
      - php_dep
    apt:
      name:
        - ca-certificates
        - apt-transport-https
        - software-properties-common
        - lsb-release
      update_cache: true

  - name: Install PHP MB
    apt: name=php8.1-mbstring state=latest

  - name: Install PHP XML
    apt: name=php-xml state=latest

  - name: Install unzip
    apt: name=unzip state=latest

  - name: Download php-composer
    get_url:
      url: https://getcomposer.org/installer
      dest: /tmp/installer

  - name: Install composer
    shell: cat /tmp/installer | php -- --install-dir=/usr/local/bin
    args:
      creates: /usr/local/bin/composer

  - name: Rename composer.phar file to composer
    shell: mv /usr/local/bin/composer.phar /usr/local/bin/composer
    args:
      creates: /usr/local/bin/composer

  - name: Make composer executable
    file:
      path: /usr/local/bin/composer
      mode: a+x
      state: file

  - name: Install the server for apache2
    apt:
      name: apache2
      state: present

  - name: Install php curl
    shell: sudo apt-get install php-curl -y

  - name: Install php 8.0 repos
    shell: |
      sudo apt install software-properties-common
      sudo add-apt-repository ppa:ondrej/apache2 -y
      sudo add-apt-repository ppa:ondrej/php -y
      sudo apt-get -y install apt-transport-https lsb-release ca-certificates curl
      sudo apt-get install apt-transport-https gnupg2 ca-certificates -y
      sudo apt update -y
      sudo apt install -y php8.0-common php8.0-cli -y

  - name: Install lamp stack
    apt:
      pkg:
        - php8.0-mysql
        - php8.0-curl
        - php8.0-cgi
        - php8.0-xsl
        - php8.0-gd
        - php8.0-mbstring
        - php8.0-zip
        - php8.0-xmlrpc
        - php8.0-soap
        - php8.0-intl
        - libapache2-mod-php
      state: present

  - name: Installing mysql and dependencies
    package:
        name: "{{item}}"
        state: present
        update_cache: yes
    loop:
        - mysql-server
        - mysql-client 
        - python3-mysqldb
        - libmysqlclient-dev
    become: yes

  - name: Start and enable mysql service
    service:
          name: mysql
          state: started
          enabled: yes

  - name: Create mysql user
    mysql_user:
          name: Exam
          password: 1001
          priv: '*.*:ALL'
          host: '%'
          state: present

  - name: Create mysql_db
    mysql_db:
          name: Exam
          state: present

  - name: Enable the remote login to mysql
    lineinfile:
          path: /etc/mysql/mysql.conf.d/mysqld.cnf
          regexp: '^bind-address'
          line: 'bind-address = 0.0.0.0'
          backup: yes
  
  - name: Restart mysql
    service:
          name: mysql
          state: restarted

  - name: Obtain code from Github
    git: >
      repo=https://github.com/f1amy/laravel-realworld-example-app.git
      dest=/opt/lade
      force=yes
      accept_hostkey=yes

  - name: Copy lavarel repository
    shell: sudo mv -f /opt/lade /var/www/html/
    ignore_errors: true

  - name: Change file ownership, group and permissions
    ansible.builtin.file:
      path: /var/www/html/lade
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: '775'

  - name: Additional permissions
    shell: |
      sudo chgrp -R www-data /var/www/html/lade/storage /var/www/html/lade/bootstrap/cache
      sudo chmod -R ug+rwx /var/www/html/lade/storage /var/www/html/lade/bootstrap/cache

  - name: Replace content of file
    copy:
      src: /home/ubuntu/project/web.php
      dest: /var/www/html/lade/routes/web.php

  - name: Copy .env file
    copy:
      src: /var/www/html/lade/.env.example
      remote_src: true
      dest: /var/www/html/lade/.env
      owner: www-data
      group: www-data
      mode: '0775'
    become: yes

  - name: Replace content of .env file
    copy:
      src: /home/ubuntu/project/.env
      dest: /var/www/html/lade/.env

  - name: Create .htaccess file 
    copy:
      src: /home/ubuntu/project/.htaccess
      dest: /var/www/html/lade/.htaccess

  - name: install laravel dependencies
    composer:
      command: install
      working_dir: /var/www/html/lade
    environment:
      COMPOSER_ALLOW_SUPERUSER: 1

  - name: Create postgres.sh file
    copy:
      src: /home/ubuntu/project/postgres.sh
      dest: /home/ubuntu/test/postgres.sh

  - name: Execute the script
    command: sh /home/ubuntu/test/postgres.sh
    
  - name: Create lade.conf file
    copy:
      src: /home/ubuntu/project/lade.conf
      dest: /etc/apache2/sites-available/lade.conf
      owner: www-data
      group: www-data
      mode: '0644'      

  - name: Set permission for lade.conf file
    shell: sudo chmod -R 777 /etc/apache2/sites-available/lade.conf

  - name: Php artisan key generate and enable lade.conf
    shell: cd /var/www/html/lade && php artisan key:generate

  - name: Enable the .conf configurations
    shell: a2dissite 000-default.conf
    
  - name: Enable the .conf configurations
    shell: a2ensite lade.conf

  - name: Enable the .conf configuration
    shell:  a2enmod rewrite

  - name: Enable the .conf configurations
    shell: systemctl restart apache2

  - name: Install Certbot
    shell: |
      apt update
      apt install snapd -y
      snap install core
      snap refresh core
    

  - name: Install Certbot tool
    shell: snap install --classic certbot
    
  - name: Install Certbot tool
    shell: ln -s /snap/bin/certbot /usr/bin/certbot
    ignore_errors: true
    
  - name: Install my certificates
    shell: certbot --apache --agree-tos --redirect -m admin@ooluwademilade.ninja -d ooluwademilade.ninja -d www.ooluwademilade.ninja
    ignore_errors: true
    
